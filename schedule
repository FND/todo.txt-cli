#!/usr/bin/env bash

action=$1
shift
item=$1
shift
param="$*"

pattern=" t:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}" # not enforcing any particular format

function usage {
	echo "  $(basename $0) [<item> <date>|rm|mv <date>]"
	echo "    Set, remove or change date threshold of an item."
	echo "    If arguments are omitted, all scheduled tasks are listed."
	echo "    Intended to be used with futureTasks \
(http://github.com/FND/todo.txt-cli/blob/extensions/futureTasks)."
	echo "    Example: $ $TODO_SH $(basename $0) 42 tomorrow"
	echo ""
	exit
}

function list {
	$TODO_FULL_SH listall | grep "$pattern"
}

function add {
	item=$1
	threshold=$2
	$TODO_FULL_SH append $item "t:"`date -d "$threshold" +%F`
}

function remove {
	item=$1
	task=`$TODO_FULL_SH -x -p list $item | head -n1 \
		| sed -e "s/^[0-9]* //" \
			-e "s/^([A-Z])* //" \
			-e "s/$pattern//"` # remove item number, priority and threshold
	$TODO_FULL_SH replace $item "$task" # N.B.: retains priority
}

function replace {
	item=$1
	threshold=$2
	remove $item
	add $item "$threshold"
}

[ "$action" = "usage" ] && usage

if [ -z $item ]; then
	list
elif [ "$param" = "rm" ]; then
	remove $item
elif [[ "$param" == mv* ]]; then
	threshold=${param#mv }
	replace $item "$threshold"
else
	add $item "$param"
fi
